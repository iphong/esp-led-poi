!function(t){var e={};function n(r){if(e[r])return e[r].exports;var a=e[r]={i:r,l:!1,exports:{}};return t[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)n.d(r,a,function(e){return t[e]}.bind(null,a));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=83)}({83:function(t,e){const n=document.getElementById("txt"),r=document.getElementById("hex"),a=document.getElementById("dec"),i=document.getElementById("bin"),o=(document.getElementById("int"),document.getElementById("res")),p=document.getElementById("arr"),s=(document.getElementById("message"),document.getElementById("send"));chrome.storage.local.get("utils_txt",({utils_txt:t})=>{t&&(i.innerHTML=t.map(t=>t.toString(2).toUpperCase().padStart(8,"0")).join(" "),r.innerHTML=t.map(t=>t.toString(16).toUpperCase().padStart(2,"0")).join(" "),a.innerHTML=t.map(t=>t.toString()).join(" "),n.innerHTML=t.map(t=>String.fromCharCode(t)).join(""),p.innerHTML=t.map(t=>"0x"+t.toString(16).toUpperCase().padStart(2,"0")).join(", "))});let d=[];function m(t){return[...t].map(t=>t.toString(16).toUpperCase().padStart(2,"0")).join(" ")+"\n"}addEventListener("input",t=>{let e=t.target.innerText.replace(/\s+/,"");switch(t.target.id){case"txt":d=e?e.split("").map(t=>t.charCodeAt(0)):[],i.innerHTML=d.map(t=>t.toString(2).toUpperCase().padStart(8,"0")).join(" "),r.innerHTML=d.map(t=>t.toString(16).toUpperCase().padStart(2,"0")).join(" "),a.innerHTML=d.map(t=>t.toString()).join(" "),p.innerHTML=d.map(t=>"0x"+t.toString(16).toUpperCase().padStart(2,"0")).join(", ");break;case"hex":e=t.target.innerText.replace(/[^0-9a-f ]/gi,"").trim(),d=e?e.split(" ").map(t=>parseInt(t,16)):[],i.innerHTML=d.map(t=>t.toString(2).toUpperCase().padStart(8,"0")).join(" "),a.innerHTML=d.map(t=>t.toString()).join(" "),n.innerHTML=d.map(t=>String.fromCharCode(t)).join(""),p.innerHTML=d.map(t=>"0x"+t.toString(16).toUpperCase().padStart(2,"0")).join(", ");break;case"dec":e=t.target.innerText.replace(/[^0-9 ]/gi,"").trim(),d=e?e.split(" ").map(t=>parseInt(t,10)):[],i.innerHTML=d.map(t=>t.toString(2).toUpperCase().padStart(8,"0")).join(" "),r.innerHTML=d.map(t=>t.toString(16).toUpperCase().padStart(2,"0")).join(" "),n.innerHTML=d.map(t=>String.fromCharCode(t)).join(""),p.innerHTML=d.map(t=>"0x"+t.toString(16).toUpperCase().padStart(2,"0")).join(", ");break;case"bin":e=t.target.innerText.replace(/[^01 ]/gi,"").trim(),d=e?e.split(" ").map(t=>parseInt(t,2)):[],r.innerHTML=d.map(t=>t.toString(16).toUpperCase().padStart(2,"0")).join(" "),a.innerHTML=d.map(t=>t.toString()).join(" "),n.innerHTML=d.map(t=>String.fromCharCode(t)).join(""),p.innerHTML=d.map(t=>"0x"+t.toString(16).toUpperCase().padStart(2,"0")).join(", ");break;case"int":let s="\n";if(e=t.target.innerText.replace(/[^0-9]/gi,"").trim(),e){const t=parseFloat(e),n=new Uint8Array(4),r=new DataView(n.buffer);r.setUint16(0,t),s+="U16 BE = "+m(n.slice(0,2)),r.setUint16(0,t,!0),s+="U16 LE = "+m(n.slice(0,2)),r.setUint32(0,t),s+="U32 BE = "+m(n),r.setUint32(0,t,!0),s+="U32 LE = "+m(n),r.setFloat32(0,t),s+="F32 BE = "+m(n),r.setFloat32(0,t,!0),s+="F32 LE = "+m(n)}o.innerHTML=s;break;default:return}chrome.storage.local.set({utils_txt:d})}),s.addEventListener("click",t=>{chrome.app.window.get("app").contentWindow.postMessage(new Uint8Array([0,...d]))})}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,